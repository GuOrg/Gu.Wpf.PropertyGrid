<Window x:Class="Gu.Wpf.PropertyGrid.Demo.IntRowWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:Gu.Wpf.PropertyGrid.Demo.Converters"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:demo="clr-namespace:Gu.Wpf.PropertyGrid.Demo"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:propertyGrid="http://gu.se/PropertyGrid"
        xmlns:numeric="http://gu.se/NumericInput"
        Title="IntRowWindow"
        SizeToContent="WidthAndHeight"
        mc:Ignorable="d">
  <Window.DataContext>
    <demo:SettingsVm />
  </Window.DataContext>
  <Window.Resources>
    <ControlTemplate x:Key="IntRowPropChangeControlTemplate" TargetType="{x:Type propertyGrid:IntRow}">
      <Border Margin="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition MinHeight="18" />
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition propertyGrid:ColumnDefinition.Source="Header" />
            <ColumnDefinition propertyGrid:ColumnDefinition.Source="Value" />
            <ColumnDefinition propertyGrid:ColumnDefinition.Source="Suffix" />
          </Grid.ColumnDefinitions>
          <propertyGrid:HeaderBlock x:Name="PART_Header"
                                          Grid.Row="0"
                                          Grid.Column="0"
                                          Style="{TemplateBinding HeaderStyle}"
                                          Text="{TemplateBinding Header}" />

          <Border Grid.Row="0"
                        Grid.Column="1"
                        BorderBrush="{Binding Foreground,
                                              ElementName=PART_Info}"
                        Margin="0,0,0,-1"
                        BorderThickness="0,0,0,1">
            <numeric:IntBox x:Name="PART_Value"
                                    CanValueBeNull="{TemplateBinding CanValueBeNull}"
                                    IsReadOnly="{TemplateBinding IsReadOnly}"
                                    MaxValue="{TemplateBinding MaxValue}"
                                    MinValue="{TemplateBinding MinValue}"
                                    ValidationTrigger="PropertyChanged"
                                    Value="{Binding Value,
                                                    RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                    Validation.ErrorTemplate="{x:Null}" />

          </Border>
          <propertyGrid:SuffixBlock x:Name="PART_Suffix"
                                          Grid.Row="0"
                                          Grid.Column="2"
                                          Style="{TemplateBinding SuffixStyle}"
                                          Text="{TemplateBinding Suffix}" />


          <propertyGrid:InfoBlock x:Name="PART_Info"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2">
            <propertyGrid:InfoBlock.Style>
              <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{x:Null}" />
              </Style>
            </propertyGrid:InfoBlock.Style>
          </propertyGrid:InfoBlock>
        </Grid>
      </Border>
      <ControlTemplate.Triggers>
        <Trigger Property="IsReadOnly" Value="True">
          <Setter TargetName="PART_Value" Property="Focusable" Value="False" />
        </Trigger>

        <Trigger Property="Validation.HasError" Value="True">
          <Setter TargetName="PART_Info" Property="Style" Value="{Binding ErrorStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        </Trigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="Validation.HasError" Value="False" />
            <Condition Property="IsDirty" Value="True" />
          </MultiTrigger.Conditions>
          <Setter TargetName="PART_Info" Property="Style" Value="{Binding OldValueStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        </MultiTrigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="IntRowPropChangeStyle" TargetType="{x:Type propertyGrid:IntRow}">
      <Setter Property="Template" Value="{StaticResource IntRowPropChangeControlTemplate}" />
    </Style>
    
    <ControlTemplate x:Key="ValidationTemplate">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <AdornedElementPlaceholder />
        <TextBlock Grid.Column="1"
                   FontSize="20"
                   Foreground="Red"
                   Text="!" />
      </Grid>
    </ControlTemplate>
  </Window.Resources>
  <AdornerDecorator>
    <StackPanel>
      <Button Content="lose focus" />
      <TextBox AutomationProperties.AutomationId="currentValueTextBox" Text="{Binding EditableCopy.IntValue}" />
      <TextBox AutomationProperties.AutomationId="currentNullableValueTextBox" Text="{Binding EditableCopy.NullableIntValue, Converter={x:Static converters:NullableIntToStringConverter.Default}}" />

      <propertyGrid:Rows DataContext="{Binding EditableCopy}" OldDataContext="{Binding DataContext.LastSaved, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
        <propertyGrid:IntRow Header="default" Value="{Binding IntValue}" />
        <propertyGrid:IntRow Header="propertychanged" Value="{Binding IntValue, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource IntRowPropChangeStyle}" />
        <propertyGrid:IntRow Header="readonly"
                             IsReadOnly="True"
                             Value="{Binding IntValue}" />
        <propertyGrid:IntRow CanValueBeNull="True"
                             Header="nullable"
                             Value="{Binding NullableIntValue}" />
        <propertyGrid:IntRow Header="lostfocus" Value="{Binding IntValue, UpdateSourceTrigger=LostFocus}" />
        <TextBox AutomationProperties.AutomationId="lostfocusTextBox"
                 Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
          <TextBox.Text>
            <Binding Path="IntValue"
                     UpdateSourceTrigger="LostFocus">
              <Binding.ValidationRules>
                <demo:IntValidationRule />
              </Binding.ValidationRules>
            </Binding>
          </TextBox.Text>
        </TextBox>
      </propertyGrid:Rows>
    </StackPanel>
  </AdornerDecorator>
</Window>

